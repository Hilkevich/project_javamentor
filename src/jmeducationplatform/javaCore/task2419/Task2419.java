/*

Вам дан список ролей и сценарий пьесы в виде массива строчек. Каждая строчка сценария пьесы дана в следующем виде:

Роль: текст

Текст может содержать любые символы.

Напишите метод, который будет группировать строчки по ролям, пронумеровывать их и возвращать результат в виде готового
 текста (см. пример). Каждая группа распечатывается в следующем виде:

Роль:
i) текст
j) текст2
...
==перевод строки==

i и j -- номера строк в сценарии. Индексация строчек начинается с единицы, выводить группы следует в соответствии с
 порядком ролей. Переводы строк между группами обязательны, переводы строк в конце текста не учитываются.

Заметим, что вам предстоит обработка огромной пьесы в 50 000 строк для 10 ролей – соответственно, неправильная сборка
 результирующей строчки может выйти за ограничение по времени.

Обратите внимание еще на несколько нюансов:
имя персонажа может встречаться в строке более одного раза, в том числе с двоеточием;
название одной роли может быть префиксом названия другой роли (например, "Лука" и "Лука Лукич");
роль, у которой нет реплик, тоже должна присутствовать в выходном файле;
в качестве перевода строки надо использовать символ '\n' (перевод строки в стиле UNIX);
будьте внимательны, не добавляйте лишних пробелов в конце строк.

Пример ввода 1:

roles:

Городничий
Аммос Федорович
Артемий Филиппович
Лука Лукич

textLines:

Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
Аммос Федорович: Как ревизор?
Артемий Филиппович: Как ревизор?
Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.
Аммос Федорович: Вот те на!
Артемий Филиппович: Вот не было заботы, так подай!
Лука Лукич: Господи боже! еще и с секретным предписаньем!

Пример вывода 1:

Городничий:
1) Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.
4) Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.

Аммос Федорович:
2) Как ревизор?
5) Вот те на!

Артемий Филиппович:
3) Как ревизор?
6) Вот не было заботы, так подай!

Лука Лукич:
7) Господи боже! еще и с секретным предписаньем!


Требования:
1. Метод должен быть публичным.
2. Метод должен принимать на вход два массива строк.
3. Метод должен возвращать строку.
4. Результативная строка должна соответствовать уcловию.
5. Необходимо использовать StringBuilder

 */

package jmeducationplatform.javaCore.task2419;

public class Task2419 {

    public static void main(String[] args) {


        String roles[] = {"ВИННИ-ПУХ",
                "ПЯТАЧОК",
                "КРОЛИК"};
        String textLines[] = {
                "ВИННИ-ПУХ: Недаром солнце в гости к нам Всегда приходит по утрам! Тарам-тарам!",
                "ПЯТАЧОК: Тарам-парам!",
                "ВИННИ-ПУХ: Послушай, Пятачок, а не пойти ли нам в гости?",
                "ПЯТАЧОК: В гости?",
                "ВИННИ-ПУХ: Да, я вот тут подумал, а не пойти ли нам в гости? По-моему, пора чем-нибудь подкрепиться!",
                "ПЯТАЧОК: Давай! А куда мы пойдем ?",
                "ВИННИ-ПУХ: Я думаю, к тебе!",
                "ПЯТАЧОК: Пойдем!",
                "ВИННИ-ПУХ: Кто ходит в гости по утрам, Тот поступает мудро! Известно все, тарам-парам На то оно и утро!",
                "ПЯТАЧОК: На то оно и утро!",
                "ВИННИ-ПУХ: Послушай, Пятачок, а у тебя есть что-нибудь поесть?  Ну, например, мед?",
                "ПЯТАЧОК: Нет, меда у меня нет !",
                "ВИННИ-ПУХ: Нет? Знаешь, Пятачок, пожалуй, мы к тебе не пойдем! А то, что же получается? Я иду в гости, а ты не идешь!",
                "ПЯТАЧОК: Ладно!  Тогда пойдем к тебе!",
                "ВИННИ-ПУХ: Да, если гость пришел с утра, Ему спешить не надо! Кричат хозяева «Ура!» Ему ужасно рады!",
                "ПЯТАЧОК: Ему ужасно рады!",
                "КРОЛИК: Нет! И незачем так орать!",
                "ВИННИ-ПУХ: Простите, а что совсем никого нет дома?",
                "КРОЛИК: Совсем никого!",
                "ВИННИ-ПУХ: Не может быть, чтобы там совсем никого не было! Ведь кто-то должен был сказать: «Совсем никого!» Послушай, Кролик, а это, случайно, не ты?",
                "КРОЛИК: Нет, не я!",
                "ВИННИ-ПУХ: А разве это не твой голос?",
                "КРОЛИК: Нет! Не мой!",
                "ВИННИ-ПУХ: Будьте так добры, скажите пожалуйста, куда девался Кролик?",
                "КРОЛИК: Он ушел!",
                "ВИННИ-ПУХ: А куда?",
                "КРОЛИК: К своему другу Винни-Пуху!",
                "ВИННИ-ПУХ: Так ведь это же я!",
                "КРОЛИК: Что значит «я»? «Я»–бывают разные!",
                "ВИННИ-ПУХ: Я – значит я, Винни-Пух!",
                "КРОЛИК: А ты в этом уверен?"};

        printTextPerRole(roles, textLines);

    }


    public static String printTextPerRole(String[] roles, String[] textLines) {

        StringBuilder result = new StringBuilder();


        for (int k = 0; k < roles.length; k++) {                  //проходимся по ролям
            for (int i = 0; i < textLines.length; i++) {
//                      if(result.indexOf("\n") == -1){
//                          result.append("\n");                    //проходимся по репликам
//                      }

                if (textLines[i].startsWith(roles[k] + ":" + " ")) {    //добавлять или нет реплику к роли?
                    if (result.indexOf(roles[k] + ":" + "\n") == -1) {
                        result.append(roles[k] + ":" + "\n");
                    }
                    result.append((i + 1) + ") " + textLines[i].replaceFirst(roles[k] + ":", ""));
                    result.append("\n");

                }
                if (i == textLines.length - 1) {                   //добавлять ли пустую строку перед след.ролью?
                    if (result.indexOf(roles[k] + ":" + "\n") == -1) {
                        result.append(roles[k] + ":" + "\n");
                    }
                        result.append("\n");
                }
            }


        }
        System.out.println(result);
        return result.toString();    // перевели textSb из StringBuilder(а) в String. т.к вернуть нужно String.
    }
}


// textSb.append(role + ":\n");
// textSb.append((i + 1) + ")" + textLines[i].substring(role.length() + 1) + "\n");