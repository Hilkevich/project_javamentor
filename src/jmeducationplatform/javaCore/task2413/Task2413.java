/*

Реализуйте метод factorial, вычисляющий факториал заданного натурального числа.

Факториал N вычисляется как 1 ⋅ 2 ⋅ ... ⋅ N.

Поскольку это очень быстро растущая функция, то даже для небольших N вместимости типов int и long очень скоро не хватит.
Поэтому будем использовать BigInteger.

Воспользуйтесь предоставленным шаблоном. Декларацию класса, метод main и обработку ввода-вывода добавит
проверяющая система.

Пример ввода 1: 1
Пример возвращаемого значения 1: 1

Пример ввода 2: 3
Пример возвращаемого значения 2: 6

Требования:
1. Метод должен быть public.
1. Метод должен быть static.
3. Передаваемый параметр должен иметь тип int.
4. Метод должен быть реализован через цикл.
 */

package jmeducationplatform.javaCore.task2413;

import java.math.BigInteger;                             // мпортируем класс BigInteger,что бы распознала программа

public class Task2413 {

    public static void main(String[] args) {

        factorial(3);                              //вызов и инициализация метода
    }


    public static BigInteger factorial(int value) {


      BigInteger x = BigInteger.ONE;                     // ONE - это константа, короткая запись вместо valueOf(1).

        for( int i = 1; i <= value; i++) {               // счетчик перебирает по одному, записывая в x1

            BigInteger x1 = BigInteger.valueOf(i);       // valueOf - конвертирует интовую 1 в  BigInteger 1 и кладет в x1
               x = x.multiply(x1);                       // multiply - метод перемножающий каждое последующее число.
        }
        System.out.println(x);
                return x;
    }

}
